{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hacking Looking for the cheat sheet? It's here ! Welcome to our GitHub website. All resources located in our main branch can be found under Resources. Here's a useful table of all our meetings: Folder Name Description 0 - Summary Contains the cheat sheet and detailed notes on hacking are/will be posted here. 1 - Introduction to Web Exp Labs include SQLi and session hijacking. No notes included. 2 - SQLi, LFI and Automating Attacks Labs include SQLi and LFI/RFI. No notes included. 3 - Introduction to Python In this meeting, we went over the basics of Python 2.7 Meeting 4 has no resources We continued the material presented in Meeting 3","title":"Home"},{"location":"#hacking","text":"Looking for the cheat sheet? It's here ! Welcome to our GitHub website. All resources located in our main branch can be found under Resources. Here's a useful table of all our meetings: Folder Name Description 0 - Summary Contains the cheat sheet and detailed notes on hacking are/will be posted here. 1 - Introduction to Web Exp Labs include SQLi and session hijacking. No notes included. 2 - SQLi, LFI and Automating Attacks Labs include SQLi and LFI/RFI. No notes included. 3 - Introduction to Python In this meeting, we went over the basics of Python 2.7 Meeting 4 has no resources We continued the material presented in Meeting 3","title":"Hacking"},{"location":"cheat_sheet/","text":"Cheat Sheet What is this for? This is a rough guideline to help you identify the vulnerabilities in a web application. When attacking a website, consider the questions being asked and follow the steps to an easy pwn! This guide will be updated before each meeting. What was that acronym? Sometimes we're too lazy to type out the full word, so I've compiled a nice list of acronyms for you to look up. Sometimes we use fancy jargon that no one understands. Click here for an amazing list . Yes, but what exactly is this thing? Think R.E.E.! 3 easy steps to weight loss! Just kidding. These are what I believe to be the 3 steps in approaching and performing a successful exploit on a website. 1. Reconnaissance You don't know anything about the website yet. You are trying to identify the attack surface and possible vulnerabilities. You still need to identify the objective (i.e., RCE, Authentication, Leaking Code etc...). If this is you, click here. 2. Engagement You have found a possible vulnerability and are trying to exploit it now. You still need to verify if this vulnerability can lead to what you want. It is possible that you find a vulnerability/bug that is completely useless to you. If this is you, click here. 3. Exploitation/Exfiltration You found and verified the vulnerability and need to complete the full exploit. This is where you can (if you want) write a script to complete the exploit. If this is you, click here. Jargon Decoder Thank you Wikipedia. Short Form Full Name Description -- Attack surface The attack surface of a software environment is the sum of the different points (the \"attack vectors\") where an unauthorized user (the \"attacker\") can try to enter data to or extract data from an environment. -- Attack vector A vector in computing is the method that this code uses to propagate itself or infect a computer. LFI Local File Inclusion RFI Remote File Inclusion SQL Structured Query Language It is a programming language designed for querying and managing databases. Some examples include MySQL, Oracle SQL and SQLite. SQLi SQL Injection A code injection technique in which malicious SQL statements are inserted into an entry field for execution (e.g. to dump the database contents to the attacker). SQL injection is mostly known as an attack vector for websites but can be used to attack any type of SQL database. Ok, Enough! Let's begin. 1. Recon 2. Engage 3. Exploit","title":"Cheat Sheet"},{"location":"cheat_sheet/#cheat-sheet","text":"","title":"Cheat Sheet"},{"location":"cheat_sheet/#what-is-this-for","text":"This is a rough guideline to help you identify the vulnerabilities in a web application. When attacking a website, consider the questions being asked and follow the steps to an easy pwn! This guide will be updated before each meeting.","title":"What is this for?"},{"location":"cheat_sheet/#what-was-that-acronym","text":"Sometimes we're too lazy to type out the full word, so I've compiled a nice list of acronyms for you to look up. Sometimes we use fancy jargon that no one understands. Click here for an amazing list .","title":"What was that acronym?"},{"location":"cheat_sheet/#yes-but-what-exactly-is-this-thing-think-ree","text":"3 easy steps to weight loss! Just kidding. These are what I believe to be the 3 steps in approaching and performing a successful exploit on a website.","title":"Yes, but what exactly is this thing? Think R.E.E.!"},{"location":"cheat_sheet/#1-reconnaissance","text":"You don't know anything about the website yet. You are trying to identify the attack surface and possible vulnerabilities. You still need to identify the objective (i.e., RCE, Authentication, Leaking Code etc...). If this is you, click here.","title":"1. Reconnaissance"},{"location":"cheat_sheet/#2-engagement","text":"You have found a possible vulnerability and are trying to exploit it now. You still need to verify if this vulnerability can lead to what you want. It is possible that you find a vulnerability/bug that is completely useless to you. If this is you, click here.","title":"2. Engagement"},{"location":"cheat_sheet/#3-exploitationexfiltration","text":"You found and verified the vulnerability and need to complete the full exploit. This is where you can (if you want) write a script to complete the exploit. If this is you, click here.","title":"3. Exploitation/Exfiltration"},{"location":"cheat_sheet/#jargon-decoder","text":"Thank you Wikipedia. Short Form Full Name Description -- Attack surface The attack surface of a software environment is the sum of the different points (the \"attack vectors\") where an unauthorized user (the \"attacker\") can try to enter data to or extract data from an environment. -- Attack vector A vector in computing is the method that this code uses to propagate itself or infect a computer. LFI Local File Inclusion RFI Remote File Inclusion SQL Structured Query Language It is a programming language designed for querying and managing databases. Some examples include MySQL, Oracle SQL and SQLite. SQLi SQL Injection A code injection technique in which malicious SQL statements are inserted into an entry field for execution (e.g. to dump the database contents to the attacker). SQL injection is mostly known as an attack vector for websites but can be used to attack any type of SQL database.","title":"Jargon Decoder"},{"location":"cheat_sheet/#ok-enough-lets-begin","text":"","title":"Ok, Enough! Let's begin."},{"location":"cheat_sheet/#1-recon","text":"","title":"1. Recon"},{"location":"cheat_sheet/#2-engage","text":"","title":"2. Engage"},{"location":"cheat_sheet/#3-exploit","text":"","title":"3. Exploit"},{"location":"Resources/1 - Introduction to Web Exp/Labs/","text":"Meeting 1: Introduction to Web Exploitation Labs These problems were taken from the ongoing PicoCTF2019 contest. Warmup 0: Insp3ct0r (50 pts) Problem: Kishor Balan tipped us off that the following code may need inspection: https://2019shell1.picoctf.com/problem/28717/ or http://2019shell1.picoctf.com:28717 Hints: 1. How do you inspect web code on a browser? 2. There's 3 parts See Solution Lab 1: dont-use-client-side (100 pts) Problem: Can you break into this super secure portal? https://2019shell1.picoctf.com/problem/49886/ or http://2019shell1.picoctf.com:49886 Hints: Never trust the client See Solution Lab 2: logon (100 pts) Problem: The factory is hiding things from all of its users. Can you login as logon and find what they've been looking at? https://2019shell1.picoctf.com/problem/47307/ or http://2019shell1.picoctf.com:47307 Hints: Hmm it doesn't seem to check anyone's password, except for {{name}}'s? See Solution Lab 3: Open-to-admins (200 pts) Problem: This secure website allows users to access the flag only if they are admin and if the time is exactly 1400. https://2019shell1.picoctf.com/problem/49858/ or http://2019shell1.picoctf.com:49858 Hints: Can cookies help you to get the flag? See Solution Lab 4: Irish-Name-Repo 1 (300 pts) Problem: There is a website running at https://2019shell1.picoctf.com/problem/47253/ or http://2019shell1.picoctf.com:47253. Do you think you can log us in? Try to see if you can login! Hints: There doesn't seem to be many ways to interact with this, I wonder if the users are kept in a database? Try to think about how does the website verify your login? See Solution Lab 5: JaWT Scratchpad (400 pts, but imo should be 700) Problem: Check the admin scratchpad! https://2019shell1.picoctf.com/problem/12283/ or http://2019shell1.picoctf.com:12283 Hints: What is that cookie? Have you heard of JWT? See Solution","title":"Meeting 1 Labs"},{"location":"Resources/1 - Introduction to Web Exp/Labs/#meeting-1-introduction-to-web-exploitation","text":"","title":"Meeting 1: Introduction to Web Exploitation"},{"location":"Resources/1 - Introduction to Web Exp/Labs/#labs","text":"These problems were taken from the ongoing PicoCTF2019 contest.","title":"Labs"},{"location":"Resources/1 - Introduction to Web Exp/Labs/#warmup-0-insp3ct0r-50-pts","text":"Problem: Kishor Balan tipped us off that the following code may need inspection: https://2019shell1.picoctf.com/problem/28717/ or http://2019shell1.picoctf.com:28717 Hints: 1. How do you inspect web code on a browser? 2. There's 3 parts See Solution","title":"Warmup 0: Insp3ct0r (50 pts)"},{"location":"Resources/1 - Introduction to Web Exp/Labs/#lab-1-dont-use-client-side-100-pts","text":"Problem: Can you break into this super secure portal? https://2019shell1.picoctf.com/problem/49886/ or http://2019shell1.picoctf.com:49886 Hints: Never trust the client See Solution","title":"Lab 1: dont-use-client-side (100 pts)"},{"location":"Resources/1 - Introduction to Web Exp/Labs/#lab-2-logon-100-pts","text":"Problem: The factory is hiding things from all of its users. Can you login as logon and find what they've been looking at? https://2019shell1.picoctf.com/problem/47307/ or http://2019shell1.picoctf.com:47307 Hints: Hmm it doesn't seem to check anyone's password, except for {{name}}'s? See Solution","title":"Lab 2: logon (100 pts)"},{"location":"Resources/1 - Introduction to Web Exp/Labs/#lab-3-open-to-admins-200-pts","text":"Problem: This secure website allows users to access the flag only if they are admin and if the time is exactly 1400. https://2019shell1.picoctf.com/problem/49858/ or http://2019shell1.picoctf.com:49858 Hints: Can cookies help you to get the flag? See Solution","title":"Lab 3: Open-to-admins (200 pts)"},{"location":"Resources/1 - Introduction to Web Exp/Labs/#lab-4-irish-name-repo-1-300-pts","text":"Problem: There is a website running at https://2019shell1.picoctf.com/problem/47253/ or http://2019shell1.picoctf.com:47253. Do you think you can log us in? Try to see if you can login! Hints: There doesn't seem to be many ways to interact with this, I wonder if the users are kept in a database? Try to think about how does the website verify your login? See Solution","title":"Lab 4: Irish-Name-Repo 1 (300 pts)"},{"location":"Resources/1 - Introduction to Web Exp/Labs/#lab-5-jawt-scratchpad-400-pts-but-imo-should-be-700","text":"Problem: Check the admin scratchpad! https://2019shell1.picoctf.com/problem/12283/ or http://2019shell1.picoctf.com:12283 Hints: What is that cookie? Have you heard of JWT? See Solution","title":"Lab 5: JaWT Scratchpad (400 pts, but imo should be 700)"},{"location":"Resources/1 - Introduction to Web Exp/Solution 0 Insp3ct0r/","text":"Problem Statement Insp3ct0r (50 pts) Problem: Kishor Balan tipped us off that the following code may need inspection: https://2019shell1.picoctf.com/problem/28717/ or http://2019shell1.picoctf.com:28717 Hints: 1. How do you inspect web code on a browser? 2. There's 3 parts Write-Up Using \"View Page Source,\" we can locate all three parts of the flag. The first part of the flag is located at the bottom of the page. The second part is located in the mycss.css stylesheet file (click the blue hyperlink) and the third part is located at the bottom of the myjs.js javascript file. link rel = stylesheet type = text/css href = mycss.css script type = application/javascript src = myjs.js / script","title":"Solution 0 Insp3ct0r"},{"location":"Resources/1 - Introduction to Web Exp/Solution 0 Insp3ct0r/#problem-statement","text":"","title":"Problem Statement"},{"location":"Resources/1 - Introduction to Web Exp/Solution 0 Insp3ct0r/#insp3ct0r-50-pts","text":"Problem: Kishor Balan tipped us off that the following code may need inspection: https://2019shell1.picoctf.com/problem/28717/ or http://2019shell1.picoctf.com:28717 Hints: 1. How do you inspect web code on a browser? 2. There's 3 parts","title":"Insp3ct0r (50 pts)"},{"location":"Resources/1 - Introduction to Web Exp/Solution 0 Insp3ct0r/#write-up","text":"Using \"View Page Source,\" we can locate all three parts of the flag. The first part of the flag is located at the bottom of the page. The second part is located in the mycss.css stylesheet file (click the blue hyperlink) and the third part is located at the bottom of the myjs.js javascript file. link rel = stylesheet type = text/css href = mycss.css script type = application/javascript src = myjs.js / script","title":"Write-Up"},{"location":"Resources/1 - Introduction to Web Exp/Solution 1 dont-use-client-side/","text":"Problem Statement Problem: Can you break into this super secure portal? https://2019shell1.picoctf.com/problem/49886/ or http://2019shell1.picoctf.com:49886 Hints: Never trust the client Write-Up Locating this chunk of the code: if ( checkpass . substring ( 0 , split ) == pico ) { if ( checkpass . substring ( split * 6 , split * 7 ) == e2f2 ) { if ( checkpass . substring ( split , split * 2 ) == CTF{ ) { if ( checkpass . substring ( split * 4 , split * 5 ) == ts_p ) { if ( checkpass . substring ( split * 3 , split * 4 ) == lien ) { if ( checkpass . substring ( split * 5 , split * 6 ) == lz_e ){ if ( checkpass . substring ( split * 2 , split * 3 ) == no_c ) { if ( checkpass . substring ( split * 7 , split * 8 ) == 4 ) { We can deduce the probable order of the flag through the number multiplied by split . For instance, the piece associated with split goes before split*2 which goes before split*3 etc... Note that the fragments of the flag is surrounded by single quotes i.e., 'some text' . To learn more about Javascript, I've included a link to a cheat sheet: https://htmlcheatsheet.com/js/","title":"Solution 1 dont use client side"},{"location":"Resources/1 - Introduction to Web Exp/Solution 1 dont-use-client-side/#problem-statement","text":"Problem: Can you break into this super secure portal? https://2019shell1.picoctf.com/problem/49886/ or http://2019shell1.picoctf.com:49886 Hints: Never trust the client","title":"Problem Statement"},{"location":"Resources/1 - Introduction to Web Exp/Solution 1 dont-use-client-side/#write-up","text":"Locating this chunk of the code: if ( checkpass . substring ( 0 , split ) == pico ) { if ( checkpass . substring ( split * 6 , split * 7 ) == e2f2 ) { if ( checkpass . substring ( split , split * 2 ) == CTF{ ) { if ( checkpass . substring ( split * 4 , split * 5 ) == ts_p ) { if ( checkpass . substring ( split * 3 , split * 4 ) == lien ) { if ( checkpass . substring ( split * 5 , split * 6 ) == lz_e ){ if ( checkpass . substring ( split * 2 , split * 3 ) == no_c ) { if ( checkpass . substring ( split * 7 , split * 8 ) == 4 ) { We can deduce the probable order of the flag through the number multiplied by split . For instance, the piece associated with split goes before split*2 which goes before split*3 etc... Note that the fragments of the flag is surrounded by single quotes i.e., 'some text' . To learn more about Javascript, I've included a link to a cheat sheet: https://htmlcheatsheet.com/js/","title":"Write-Up"},{"location":"Resources/1 - Introduction to Web Exp/Solution 2 logon/","text":"Problem Statement Lab 2: logon (100 pts) Problem: The factory is hiding things from all of its users. Can you login as logon and find what they've been looking at? https://2019shell1.picoctf.com/problem/47307/ or http://2019shell1.picoctf.com:47307 Hints: Hmm it doesn't seem to check anyone's password, except for {{name}}'s? Write-Up We first notice that any username and password combination is allowed, however no flag is displayed. Inspecting web traffic, notice that the server sends back 3 cookies (namely admin , username and password ) when logging in: HTTP/1.1 302 FOUND Server: nginx Date: Mon, 07 Oct 2019 23:20:22 GMT Content-Type: text/html; charset=utf-8 Content-Length: 217 Connection: keep-alive Location: https://2019shell1.picoctf.com/flag * Replaced cookie password= a for domain 2019shell1.picoctf.com, path /, expire 0 Set-Cookie: password=a; Path=/ Set-Cookie: username=test; Path=/ Set-Cookie: admin=False; Path=/ Therefore, changing the cookie admin from False to True and reloading the webpage allows us to see the flag. Note: You can change cookie values through the inspector (on Chrome its usually under Application - Cookies), however that method is sometimes not optimal. Instead, you can open up the Inspector and under Console, type document.cookie=\"keyofcookie=valueofcookie\" to change cookies.","title":"Solution 2 logon"},{"location":"Resources/1 - Introduction to Web Exp/Solution 2 logon/#problem-statement","text":"","title":"Problem Statement"},{"location":"Resources/1 - Introduction to Web Exp/Solution 2 logon/#lab-2-logon-100-pts","text":"Problem: The factory is hiding things from all of its users. Can you login as logon and find what they've been looking at? https://2019shell1.picoctf.com/problem/47307/ or http://2019shell1.picoctf.com:47307 Hints: Hmm it doesn't seem to check anyone's password, except for {{name}}'s?","title":"Lab 2: logon (100 pts)"},{"location":"Resources/1 - Introduction to Web Exp/Solution 2 logon/#write-up","text":"We first notice that any username and password combination is allowed, however no flag is displayed. Inspecting web traffic, notice that the server sends back 3 cookies (namely admin , username and password ) when logging in: HTTP/1.1 302 FOUND Server: nginx Date: Mon, 07 Oct 2019 23:20:22 GMT Content-Type: text/html; charset=utf-8 Content-Length: 217 Connection: keep-alive Location: https://2019shell1.picoctf.com/flag * Replaced cookie password= a for domain 2019shell1.picoctf.com, path /, expire 0 Set-Cookie: password=a; Path=/ Set-Cookie: username=test; Path=/ Set-Cookie: admin=False; Path=/ Therefore, changing the cookie admin from False to True and reloading the webpage allows us to see the flag. Note: You can change cookie values through the inspector (on Chrome its usually under Application - Cookies), however that method is sometimes not optimal. Instead, you can open up the Inspector and under Console, type document.cookie=\"keyofcookie=valueofcookie\" to change cookies.","title":"Write-Up"},{"location":"Resources/1 - Introduction to Web Exp/Solution 3 Open-to-admins/","text":"Problem Statement Lab 3: Open-to-admins (200 pts) Problem: This secure website allows users to access the flag only if they are admin and if the time is exactly 1400. https://2019shell1.picoctf.com/problem/49858/ or http://2019shell1.picoctf.com:49858 Hints: Can cookies help you to get the flag? Write-Up This is similar to Lab 2. Instead, set admin to True and time to 1400 .","title":"Solution 3 Open to admins"},{"location":"Resources/1 - Introduction to Web Exp/Solution 3 Open-to-admins/#problem-statement","text":"","title":"Problem Statement"},{"location":"Resources/1 - Introduction to Web Exp/Solution 3 Open-to-admins/#lab-3-open-to-admins-200-pts","text":"Problem: This secure website allows users to access the flag only if they are admin and if the time is exactly 1400. https://2019shell1.picoctf.com/problem/49858/ or http://2019shell1.picoctf.com:49858 Hints: Can cookies help you to get the flag?","title":"Lab 3: Open-to-admins (200 pts)"},{"location":"Resources/1 - Introduction to Web Exp/Solution 3 Open-to-admins/#write-up","text":"This is similar to Lab 2. Instead, set admin to True and time to 1400 .","title":"Write-Up"},{"location":"Resources/1 - Introduction to Web Exp/Solution 4 Irish-Name-Repo 1/","text":"Problem Statement Lab 4: Irish-Name-Repo 1 (300 pts) Problem: There is a website running at https://2019shell1.picoctf.com/problem/47253/ or http://2019shell1.picoctf.com:47253. Do you think you can log us in? Try to see if you can login! Hints: There doesn't seem to be many ways to interact with this, I wonder if the users are kept in a database? Try to think about how does the website verify your login? Write-Up Upon inspecting the login page, we can find a suspicious tag buried in the source: input type = hidden name = debug value = 0 Setting the value to 1 and entering some username and password shows: username: admin password: admin SQL query: SELECT * FROM users WHERE name= admin AND password= admin Login failed. Notice the SQL query. Setting the username to a single quote ( ' ) and logging in results in: username: password: SQL query: SELECT * FROM users WHERE name= AND password= Reviewing the network activity shows a return code of 500: Internal Server Error . This indicates the absence of proper SQL filtering. A simple SQL injection of ' OR 1==1-- brings us into the mainframe :).","title":"Solution 4 Irish Name Repo 1"},{"location":"Resources/1 - Introduction to Web Exp/Solution 4 Irish-Name-Repo 1/#problem-statement","text":"","title":"Problem Statement"},{"location":"Resources/1 - Introduction to Web Exp/Solution 4 Irish-Name-Repo 1/#lab-4-irish-name-repo-1-300-pts","text":"Problem: There is a website running at https://2019shell1.picoctf.com/problem/47253/ or http://2019shell1.picoctf.com:47253. Do you think you can log us in? Try to see if you can login! Hints: There doesn't seem to be many ways to interact with this, I wonder if the users are kept in a database? Try to think about how does the website verify your login?","title":"Lab 4: Irish-Name-Repo 1 (300 pts)"},{"location":"Resources/1 - Introduction to Web Exp/Solution 4 Irish-Name-Repo 1/#write-up","text":"Upon inspecting the login page, we can find a suspicious tag buried in the source: input type = hidden name = debug value = 0 Setting the value to 1 and entering some username and password shows: username: admin password: admin SQL query: SELECT * FROM users WHERE name= admin AND password= admin Login failed. Notice the SQL query. Setting the username to a single quote ( ' ) and logging in results in: username: password: SQL query: SELECT * FROM users WHERE name= AND password= Reviewing the network activity shows a return code of 500: Internal Server Error . This indicates the absence of proper SQL filtering. A simple SQL injection of ' OR 1==1-- brings us into the mainframe :).","title":"Write-Up"},{"location":"Resources/1 - Introduction to Web Exp/Solution 5 JaWT Scratchpad/","text":"Problem Statement Lab 5: JaWT Scratchpad (400 pts, but imo should be 700) Problem: Check the admin scratchpad! https://2019shell1.picoctf.com/problem/12283/ or http://2019shell1.picoctf.com:12283 Hints: What is that cookie? Have you heard of JWT? Write-Up Use the latest version of John-The-Ripper from GitHub to crack JWT signatures. You can also write a custom Python script to loop through the rockyou password list and perform a dictionary attack.","title":"Solution 5 JaWT Scratchpad"},{"location":"Resources/1 - Introduction to Web Exp/Solution 5 JaWT Scratchpad/#problem-statement","text":"","title":"Problem Statement"},{"location":"Resources/1 - Introduction to Web Exp/Solution 5 JaWT Scratchpad/#lab-5-jawt-scratchpad-400-pts-but-imo-should-be-700","text":"Problem: Check the admin scratchpad! https://2019shell1.picoctf.com/problem/12283/ or http://2019shell1.picoctf.com:12283 Hints: What is that cookie? Have you heard of JWT?","title":"Lab 5: JaWT Scratchpad (400 pts, but imo should be 700)"},{"location":"Resources/1 - Introduction to Web Exp/Solution 5 JaWT Scratchpad/#write-up","text":"Use the latest version of John-The-Ripper from GitHub to crack JWT signatures. You can also write a custom Python script to loop through the rockyou password list and perform a dictionary attack.","title":"Write-Up"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/","text":"Meeting 2: SQLi, LFI and Automating Attacks Resources Insomnia REST Client Send HTTP Requests Online Online PHP Sandbox PHP Documentation for include() PHP Documentation for wrappers CVV #1: Local File Inclusion Labs Some of these problems were taken from the ongoing PicoCTF2019 contest. Warmup 0: Client-side-again (200 pts) Problem: Can you break into this super secure portal? https://2019shell1.picoctf.com/problem/32255/ or http://2019shell1.picoctf.com:32255 Hints: What is obfuscation? Warmup 1: Irish-Name-Repo 1 (300 pts) Problem: There is a website running at https://2019shell1.picoctf.com/problem/47253/ or http://2019shell1.picoctf.com:47253. Do you think you can log us in? Try to see if you can login! Hints: There doesn't seem to be many ways to interact with this, I wonder if the users are kept in a database? Try to think about how does the website verify your login? Lab 1: Irish-Name-Repo 2 (350 pts) Problem: There is a website running at https://2019shell1.picoctf.com/problem/40968/. Someone has bypassed the login before, and now it's being strengthened. Try to see if you can still login! or http://2019shell1.picoctf.com:40968 Hints: The password is being filtered. Lab 2: Irish-Name-Repo 3 (400 pts) Problem: There is a secure website running at https://2019shell1.picoctf.com/problem/21874/ (link) or http://2019shell1.picoctf.com:21874. Try to see if you can login as admin! Hints: Seems like the password is encrypted. Demo 1: cereal hacker 2 (500 pts) Problem: Get the admin's password. https://2019shell1.picoctf.com/problem/62195/ or http://2019shell1.picoctf.com:62195 Lab 3: http://lfi.warchall.net/ Problem This is not a PicoCTF problem. Can you leak the source code of solution.php? Hints: Try php://filter/convert.base64-encode/... Lab 4: http://rfi.warchall.net/ Problem This is not a PicoCTF problem. Can you get a shell? Hints: Can you gain RCE? Can you find a one-line PHP backdoor? (Use Google!)","title":"Meeting 2 Labs"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#meeting-2-sqli-lfi-and-automating-attacks","text":"","title":"Meeting 2: SQLi, LFI and Automating Attacks"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#resources","text":"Insomnia REST Client Send HTTP Requests Online Online PHP Sandbox PHP Documentation for include() PHP Documentation for wrappers CVV #1: Local File Inclusion","title":"Resources"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#labs","text":"Some of these problems were taken from the ongoing PicoCTF2019 contest.","title":"Labs"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#warmup-0-client-side-again-200-pts","text":"Problem: Can you break into this super secure portal? https://2019shell1.picoctf.com/problem/32255/ or http://2019shell1.picoctf.com:32255 Hints: What is obfuscation?","title":"Warmup 0: Client-side-again (200 pts)"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#warmup-1-irish-name-repo-1-300-pts","text":"Problem: There is a website running at https://2019shell1.picoctf.com/problem/47253/ or http://2019shell1.picoctf.com:47253. Do you think you can log us in? Try to see if you can login! Hints: There doesn't seem to be many ways to interact with this, I wonder if the users are kept in a database? Try to think about how does the website verify your login?","title":"Warmup 1: Irish-Name-Repo 1 (300 pts)"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#lab-1-irish-name-repo-2-350-pts","text":"Problem: There is a website running at https://2019shell1.picoctf.com/problem/40968/. Someone has bypassed the login before, and now it's being strengthened. Try to see if you can still login! or http://2019shell1.picoctf.com:40968 Hints: The password is being filtered.","title":"Lab 1: Irish-Name-Repo 2 (350 pts)"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#lab-2-irish-name-repo-3-400-pts","text":"Problem: There is a secure website running at https://2019shell1.picoctf.com/problem/21874/ (link) or http://2019shell1.picoctf.com:21874. Try to see if you can login as admin! Hints: Seems like the password is encrypted.","title":"Lab 2: Irish-Name-Repo 3 (400 pts)"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#demo-1-cereal-hacker-2-500-pts","text":"Problem: Get the admin's password. https://2019shell1.picoctf.com/problem/62195/ or http://2019shell1.picoctf.com:62195","title":"Demo 1: cereal hacker 2 (500 pts)"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#lab-3-httplfiwarchallnet","text":"Problem This is not a PicoCTF problem. Can you leak the source code of solution.php? Hints: Try php://filter/convert.base64-encode/...","title":"Lab 3: http://lfi.warchall.net/"},{"location":"Resources/2 - SQLi, LFI and Automating Attacks/Labs/#lab-4-httprfiwarchallnet","text":"Problem This is not a PicoCTF problem. Can you get a shell? Hints: Can you gain RCE? Can you find a one-line PHP backdoor? (Use Google!)","title":"Lab 4: http://rfi.warchall.net/"},{"location":"Resources/3 - Introduction to Python/Notes/","text":"Meeting 3: Introduction to Python Resources Repl.it Python Documentation Python Library Reference (for standard modules) Example Hangman Game made in Python Notes Follow along with the steps below to create your own Hangman/word guessing game in Python! Each step builds on the code from the previous step. Note that we will be using Python 2 for this lesson. Example: https://hangman.redapple410.repl.run Example code: https://repl.it/@redapple410/hangman 0: Getting Started Explanation: Go to repl.it and create a new repl (project). Choose Python 2 as the language. 1: Output Explanation: Imagine that you are playing hangman, and need to pick a word. Output this word using print \"The correct word is ...\" . Example: https://repl.it/@redapple410/hangman-01 2: Variables Explanation: Take your word from Step 1, and create a variable (perhaps call it word ?) to store it using name = value . Then, output its value using print \"The correct word is %s.\" % ( name ) . Example: https://repl.it/@redapple410/hangman-02 3: Input Explanation: Create a new variable (perhaps call it guess ?) and use name = raw_input(\"Guess the word: \") to get input from the user. It's also a good idea to output the user's guess. Example: https://repl.it/@redapple410/hangman-03 4: If/Else Statements Explanation: After getting input, check to see if the user's guess matches the correct word using if guess == word: . If it matches, output something nice! Otherwise, use else: to tell them that the guess is incorrect. Example: https://repl.it/@redapple410/hangman-04 5: While Loops Explanation: Use a while loop to let the user keep guessing the word until they get it right (ie. keep guessing while guess != word ). You can even implement another variable to keep count of how many guesses it takes! Example: https://repl.it/@redapple410/hangman-05 6: For Loops Explanation: Now, instead of asking the user to guess the entire word, ask them to guess just one letter instead. Every time they guess a letter, use a for loop to go through every letter of the correct word and compare it to the user's guess. If they match, output something (eg. print \"Found letter %s at index %d\" % (guess, i) ). Example: https://repl.it/@redapple410/hangman-06 7: String Operations Explanation: Use string concatenation and string slicing like word[:i] + guess + word[i+1:] to keep track of which letters the user has correctly guess so far, and output them to the screen. Example: https://repl.it/@redapple410/hangman-07 8: Lists Explanation: Create a pre-defined list of words (perhaps call it words ?) that you can choose from. Example: https://repl.it/@redapple410/hangman-08 9: Importing Modules Explanation: Import the random module using import random . Then, use word = random.choice(words) to randomly choose a word from the list you created in Step 8, and use it as the correct word for Hangman. (For those who are too lazy to consult the Library Reference, random.choice( list ) returns a random item from the given list.) Example: https://repl.it/@redapple410/hangman-08","title":"Meeting 3 & 4 Notes"},{"location":"Resources/3 - Introduction to Python/Notes/#meeting-3-introduction-to-python","text":"","title":"Meeting 3: Introduction to Python"},{"location":"Resources/3 - Introduction to Python/Notes/#resources","text":"Repl.it Python Documentation Python Library Reference (for standard modules) Example Hangman Game made in Python","title":"Resources"},{"location":"Resources/3 - Introduction to Python/Notes/#notes","text":"Follow along with the steps below to create your own Hangman/word guessing game in Python! Each step builds on the code from the previous step. Note that we will be using Python 2 for this lesson. Example: https://hangman.redapple410.repl.run Example code: https://repl.it/@redapple410/hangman","title":"Notes"},{"location":"Resources/3 - Introduction to Python/Notes/#0-getting-started","text":"Explanation: Go to repl.it and create a new repl (project). Choose Python 2 as the language.","title":"0: Getting Started"},{"location":"Resources/3 - Introduction to Python/Notes/#1-output","text":"Explanation: Imagine that you are playing hangman, and need to pick a word. Output this word using print \"The correct word is ...\" . Example: https://repl.it/@redapple410/hangman-01","title":"1: Output"},{"location":"Resources/3 - Introduction to Python/Notes/#2-variables","text":"Explanation: Take your word from Step 1, and create a variable (perhaps call it word ?) to store it using name = value . Then, output its value using print \"The correct word is %s.\" % ( name ) . Example: https://repl.it/@redapple410/hangman-02","title":"2: Variables"},{"location":"Resources/3 - Introduction to Python/Notes/#3-input","text":"Explanation: Create a new variable (perhaps call it guess ?) and use name = raw_input(\"Guess the word: \") to get input from the user. It's also a good idea to output the user's guess. Example: https://repl.it/@redapple410/hangman-03","title":"3: Input"},{"location":"Resources/3 - Introduction to Python/Notes/#4-ifelse-statements","text":"Explanation: After getting input, check to see if the user's guess matches the correct word using if guess == word: . If it matches, output something nice! Otherwise, use else: to tell them that the guess is incorrect. Example: https://repl.it/@redapple410/hangman-04","title":"4: If/Else Statements"},{"location":"Resources/3 - Introduction to Python/Notes/#5-while-loops","text":"Explanation: Use a while loop to let the user keep guessing the word until they get it right (ie. keep guessing while guess != word ). You can even implement another variable to keep count of how many guesses it takes! Example: https://repl.it/@redapple410/hangman-05","title":"5: While Loops"},{"location":"Resources/3 - Introduction to Python/Notes/#6-for-loops","text":"Explanation: Now, instead of asking the user to guess the entire word, ask them to guess just one letter instead. Every time they guess a letter, use a for loop to go through every letter of the correct word and compare it to the user's guess. If they match, output something (eg. print \"Found letter %s at index %d\" % (guess, i) ). Example: https://repl.it/@redapple410/hangman-06","title":"6: For Loops"},{"location":"Resources/3 - Introduction to Python/Notes/#7-string-operations","text":"Explanation: Use string concatenation and string slicing like word[:i] + guess + word[i+1:] to keep track of which letters the user has correctly guess so far, and output them to the screen. Example: https://repl.it/@redapple410/hangman-07","title":"7: String Operations"},{"location":"Resources/3 - Introduction to Python/Notes/#8-lists","text":"Explanation: Create a pre-defined list of words (perhaps call it words ?) that you can choose from. Example: https://repl.it/@redapple410/hangman-08","title":"8: Lists"},{"location":"Resources/3 - Introduction to Python/Notes/#9-importing-modules","text":"Explanation: Import the random module using import random . Then, use word = random.choice(words) to randomly choose a word from the list you created in Step 8, and use it as the correct word for Hangman. (For those who are too lazy to consult the Library Reference, random.choice( list ) returns a random item from the given list.) Example: https://repl.it/@redapple410/hangman-08","title":"9: Importing Modules"}]}